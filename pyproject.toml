[tool.poetry]
name = "wetterdienst"
version = "0.10.1"
description = "Open weather data for humans"
authors = [
    "Benjamin Gutzmann <gutzemann@gmail.com>",
    "Andreas Motl <andreas.motl@panodata.org>",
    "Daniel Lassahn <daniel.lassahn@meteointelligence.de>"
]
license = "MIT"
readme = "README.rst"
include = [
    "LICENSE.rst",
    "CHANGELOG.rst",
    "CODE_OF_CONDUCT.rst"
]
homepage = "https://wetterdienst.readthedocs.io/"
repository = "https://github.com/earthobservations/wetterdienst"
keywords = [
    "dwd",
    "deutscher wetterdienst",
    "german weather service",
    "weather",
    "weather-data",
    "weather-api",
    "open-data",
    "observations",
    "historical-data",
    "forecasts",
    "radar"
]
classifiers = [
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.6",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "License :: OSI Approved :: MIT License",
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Intended Audience :: Education",
    "Intended Audience :: Information Technology",
    "Intended Audience :: Science/Research",
    "Intended Audience :: System Administrators",
    "Topic :: Communications",
    "Topic :: Database",
    "Topic :: Internet",
    "Topic :: Internet :: WWW/HTTP :: Indexing/Search",
    "Topic :: Scientific/Engineering :: Atmospheric Science",
    "Topic :: Scientific/Engineering :: GIS",
    "Topic :: Scientific/Engineering :: Human Machine Interfaces",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Scientific/Engineering :: Interface Engine/Protocol Translator",
    "Topic :: Scientific/Engineering :: Visualization",
    "Topic :: Software Development :: Libraries",
    "Topic :: System :: Archiving",
    "Topic :: Text Processing",
    "Topic :: Utilities",
    "Operating System :: POSIX",
    "Operating System :: Unix",
    "Operating System :: MacOS"
]

[tool.poetry.dependencies]
python = "^3.6.1"
pandas = "^1.1.2"
tables = "^3.6.1"
numpy = "^1.19.2"
scipy = "^1.5.2"
h5py = "^2.10.0"
cachetools = "^4.1.1"
docopt = "^0.6.2"
munch = "^2.5.0"
dateparser = "^1.0.0"
beautifulsoup4 = "^4.9.1"
requests = "^2.24.0"
python-dateutil = "^2.8.0"
"dogpile.cache" = "^1.0.2"
appdirs = "^1.4.4"
lxml = "^4.5.2"
tqdm = "^4.47.0"
PyPDF2 = "^1.26.0"
tabulate = "^0.8.7"
deprecation = "^2.1.0"

# Conditionally installed for backward compatibility with older Python versions
importlib_metadata              = { version = "^1.7.0", python = "<3.8" }
dataclasses                     = { version = "^0.7", python = "^3.6, <3.7" }

# Optional dependencies aka. "extras"
ipython                         = { version = "^7.10.1", optional = true }
ipython-genutils                = { version = "^0.2.0", optional = true }
matplotlib                      = { version = "^3.3.2", optional = true }
openpyxl                        = { version = "^3.0.5", optional = true }

sphinx                          = { version = "^3.2.1", optional = true }
sphinx-material                 = { version = "^0.0.30", optional = true }
sphinx-autodoc-typehints        = { version = "^1.11.0", optional = true }
sphinxcontrib-svg2pdfconverter  = { version = "^1.1.0", optional = true }
tomlkit                         = { version = "^0.7.0", optional = true }

duckdb                          = { version = "^0.2.2.dev254", optional = true }
influxdb                        = { version = "^5.3.0", optional = true }
crate                           = { version = "^0.25.0", optional = true, extras = ["sqlalchemy"] }
mysqlclient                     = { version = "^2.0.1", optional = true }
psycopg2-binary                 = { version = "^2.8.6", optional = true }

fastapi                         = { version = "^0.61.1", optional = true }
uvicorn                         = { version = "^0.11.8", optional = true }

wradlib                         = { version = "^1.8.0", optional = true }
pybufrkit                       = { version = "^0.2.17", optional = true }


[tool.poetry.extras]
ipython = ["ipython", "ipython-genutils", "matplotlib"]
excel = ["openpyxl"]
docs = [
    "sphinx",
    "sphinx-material",
    "tomlkit",
    "sphinx-autodoc-typehints",
    "sphinxcontrib-svg2pdfconverter",
    "matplotlib",
    "ipython"
]
http = ["fastapi", "uvicorn"]
sql = ["duckdb"]
duckdb = ["duckdb"]
influxdb = ["influxdb"]
cratedb = ["crate"]
mysql = ["mysqlclient"]
postgresql = ["psycopg2-binary"]
radar = ["wradlib", "pybufrkit"]
bufr = ["pybufrkit"]

[tool.poetry.dev-dependencies]
nox = "^2020.8.22"
black = "^20.8b1"
flake8 = "^3.8.3"
flake8-black = "^0.2.1"
flake8-bugbear = "^20.1.4"
flake8-bandit = "^2.1.2"
coverage = {extras = ["toml"], version = "^5.3"}
pytest = "^6.0.2"
pytest-cov = "^2.10.1"
pytest-notebook = "^0.6.1"
pytest-dictsdiff = "^0.5.8"
nbconvert = ">=5.0, <6.0"
mock = "^4.0.2"
surrogate = "^0.1"
matplotlib = "^3.3.2"
pybufrkit = "^0.2.17"
# wradlib = "^1.8.0"

[tool.poetry.scripts]
wetterdienst = 'wetterdienst.cli:run'
wddump = 'wetterdienst.dwd.radar.cli:wddump'

[tool.pytest.ini_options]
markers = [
    "remote: Tests accessing the internet.",
    "slow: Slow tests.",
    "sql: All tests related to SQL."
]

[tool.coverage.run]
branch = true
source = ["wetterdienst"]

[tool.coverage.report]
show_missing = true
fail_under = 0
omit =[
    "tests/*",
    "noxfile.py",
    "wetterdienst/dwd/radar/cli.py",
]
[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"
