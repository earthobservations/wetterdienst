name: Coverage
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
jobs:
  run:
    runs-on: ubuntu-latest
    name: Check code coverage
    steps:
    - name: Acquire sources
      uses: actions/checkout@v2

    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
        architecture: x64

    - name: Setup Poetry
      uses: snok/install-poetry@v1.1.2
      with:
        version: 1.1.5
        virtualenvs-create: true
        virtualenvs-in-project: true

    - name: Get Poetry cache directory
      id: poetry-cache-dir
      run: |
        echo "::set-output name=dir::$(poetry config cache-dir)"

    - name: Apply cache
      id: poetry-cache-flag
      uses: actions/cache@v2
      env:
        # Increase this value to reset cache if `poetry.lock` has not changed.
        CACHE_NUMBER: 4
      with:
        path: ${{ steps.poetry-cache-dir.outputs.dir }}
        key: poetry-${{ runner.os }}-py${{ matrix.python-version }}-${{ hashFiles('poetry.lock') }}-${{ env.CACHE_NUMBER }}

    - name: Install library
      run: .github/workflows/install.sh testing

    - name: Generate coverage report
      run: |
        poetry run pytest --cov=wetterdienst tests/
        poetry run coverage xml

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        file: ./coverage.xml
        flags: unittests
        env_vars: OS,PYTHON
        name: codecov-umbrella
        fail_ci_if_error: false
