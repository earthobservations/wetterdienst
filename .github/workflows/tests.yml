name: Tests
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
jobs:
  tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.6", "3.7", "3.8", "3.9"]
    defaults:
      run:
        shell: bash
    env:
      OS: ${{ matrix.os }}
      PYTHON: ${{ matrix.python-version }}
    name: Python ${{ matrix.python-version }} on OS ${{ matrix.os }}
    steps:
    - name: Acquire sources
      uses: actions/checkout@v2

    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Poetry
      uses: Gr1N/setup-poetry@v4

    - name: Configure poetry
      # FROM https://github.com/northtree/poetry-github-actions/actions/runs/170795796/workflow
      run: |
        poetry config virtualenvs.in-project false
        poetry config cache-dir ~/.poetry
        poetry config virtualenvs.path ~/.poetry/venv

    - name: Load cached venv
      uses: actions/cache@v2
      id: cache
      with:
        path: ~/.poetry
        key: ${{ matrix.os }}-${{ matrix.python-version }}-poetry-${{ hashFiles('poetry.lock') }}

    - name: Install library
      run: poetry install --extras=http --extras=sql --extras=excel

    - name: Test
      run: |
        poetry run poe test
