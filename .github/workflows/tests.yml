name: Tests
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
jobs:
  tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.7", "3.8", "3.9"]
    env:
      OS: ${{ matrix.os }}
      PYTHON: ${{ matrix.python-version }}
      POETRY_CACHE_DIR: ~/.cache/pypoetry

    defaults:
      run:
        shell: bash

    name: Python ${{ matrix.python-version }} on OS ${{ matrix.os }}
    steps:

    - name: Acquire sources
      uses: actions/checkout@v2

    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
        architecture: x64

    - name: Setup Poetry
      uses: snok/install-poetry@v1.1.1
      with:
        virtualenvs-in-project: true

    - name: Apply cache
      uses: actions/cache@v2
      env:
        # Increase this value to reset cache if `poetry.lock` has not changed.
        CACHE_NUMBER: 2
      with:
        path: ~/.poetry/cache
        key: ${{ matrix.os }}-${{ matrix.python-version }}-poetry-${{ env.CACHE_NUMBER }}-${{ hashFiles('poetry.lock') }}

    - name: Install dependencies
      run: poetry install --no-interaction --no-root --extras=http --extras=sql --extras=export --extras=ui

    - name: Install library
      run: poetry install --no-interaction

    - name: Test
      run: poetry run poe test
